"0","myModelFilename <- ""myModel.RData"""
"0","if (!file.exists(myModelFilename)) {"
"0",""
"0","    # Parallel cores  "
"0","    #require(parallel)"
"0","    library(doParallel)"
"0","    ncores <- makeCluster(detectCores() - 1)"
"0","    registerDoParallel(cores=ncores)"
"0","    getDoParWorkers() # 3    "
"0","    "
"0","    # use Random Forest method with Cross Validation, 4 folds"
"0","    myModel <- train(classe ~ ."
"0","                , data = inTraining"
"0","                , method = ""rf"""
"0","                , metric = ""Accuracy""  # categorical outcome variable so choose accuracy"
"0","                , preProcess=c(""center"", ""scale"") # attempt to improve accuracy by normalising"
"0","                , trControl=trainControl(method = ""cv"""
"0","                                        , number = 4 # folds of the training data"
"0","                                        , p= 0.60"
"0","                                        , allowParallel = TRUE "
"0","#                                       , seeds=NA # don't let workers set seed "
"0","                                        )"
"0","                )"
"0",""
"0","    save(myModel, file = ""myModel.RData"")"
"0","    # 3:42 .. 3:49 without preProcess"
"0","    # 3:51 .. 3:58 with preProcess"
"0","    stopCluster(ncores)"
"0","} else {"
"0","    # Use cached model  "
"0","    load(file = myModelFilename, verbose = TRUE)"
"0","}"
"2","Loading required package: foreach
"
"2","Loading required package: iterators
"
"2","Loading required package: parallel
"
